<?php

//Статические свойства и методы - это методы которыми оперируем не на фоне обьекта, а на фоне класса.
//Статичные свойства и методы используются не на уровне обьекта, а на уровне класса.

class Car
{
    //static - ключевое слово которое обозначает, что свойство или метод статичный.
    //Статичное свойство
    public static $countCar = 0;

    //константы как и статические свойства принадлежат классу
    //Константа (В заглавном регистре с разделителем _ )
    //По умолчанию модификатор доступа public, с PHP 7.1 можно ставить protected и private
    const TEST_CAR = 'Прототип';
    const TEST_CAR_SPEED = 200;

    public function __construct()
    {
        //self - Ключевое слово для обращения к статическим свойствам и методам
        //:: - Оператор разрешения области видимости
        self::$countCar++;
    }

    public function getPrototypeInfo()
    {
        return " <h3>Информация прототипа</h3>
               Наименование: " . self::TEST_CAR . "
               Скорость: " . self::TEST_CAR_SPEED;
    }

    //Статический метод
    //В статических методах мы не можем обращаться к this т.к. статические методы работают в контексте класса, а this - всегда ссылается на обьект
    //Всесто ключевого слова self можно писать имя класса (!ДУРНОЙ ТОН!), т.к. если в будущем изменится имя класса, можно получить проблемы.
    public static function getCount()
    {
        return self::$countCar;
    }

}

//Иногда можно встретить классы у которых нет обьектов и все описано статически, такой подход называет классо-ориентированное программирование.
//В классо-ориентированном программировании работа ведется на уровне класса (Пример калькулятор)

//Встроенная константа __СLASS__ создается на этапе компиляции в ней хранится полное название класса, полезна при использовании пространства имен